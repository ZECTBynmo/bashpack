#!/usr/bin/env node
// vim: ft=javascript

var program = require('commander');
var cli = require('../lib/cli.js');
var version = require('../lib/version.js');

program.version(version);

program.command('build <basedir> <startscript>')
  .option('--log-level <loglevel>','Set loglevel [info]','info')
  .option('--log-timestamp','Show timestamps in log entries [false]',false)
  .option('--log-colorize','Use colors in log output [true]',true)
  .option('--log-pretty-print','Pretty print [true]',true)
  .option('-m, --log-mute','Disable ouput')
  .option('-d, --debug','Enable debug level')
  .option('-o, --output-file <outputfile>','Outputfile [bashpack.run]','bashpack.run')
  .option('--temp-dir <directory>','Directory to use for tempory [auto-detect from TMP_DIR]')
  .option('-e, --exclude <pattern>', 'Pattern to exclude [\'.git/*\']',['.git/*'])
  .option('-l, --libs <pattern>', 'Shared libraries to include []',[])
  .option('--exclude-file <excludefile','File that contains the (shell)patterns to exclude')
  .option('--include-node <flag>','Include node binary in the bashpack [true]',true)
  .option('--node-binary <node-filename>','File path to node binary [auto-detect from path]')
  .action(function(basedir,startscript,options) {
    cli.build(basedir,startscript,options);
    process.exit(0);
  });

program.parse(process.argv);

if (!program.args.length) {
  program.help();
} else {
  var subcommands = [ 'build', 'init' ];
  if (subcommands.indexOf(program.args) < 0) {
    program.help();
  }
}


